import React, { useState, useEffect } from 'react';
import { View, Text, FlatList, Image, TouchableOpacity } from 'react-native';

const BrandView = () => {
  const [brandData, setBrandData] = useState(null);
  const [selectedSubcategory, setSelectedSubcategory] = useState(null);
  const [products, setProducts] = useState([]);

  useEffect(() => {
    // Fetch the data from the API (you can use Axios, Fetch API, or any other method)
    // and set the response to the brandData state.
    // For simplicity, let's assume you have already fetched the data.
    const fetchedData = {
      "_id": "64be261bd5fae142a202ab43",
      "brandname": "Apple",
      "brandimage": "https://images.pexels.com/photos/13748756/pexels-photo-13748756.jpeg?auto=compress&cs=tinysrgb&w=600",
      "categories": "Electronics",
      "subcategories": [
        "Phones,Laptops,Sound"
      ],
      "__v": 0
    };

    // Process the subcategories string into an array of subcategory names
    if (fetchedData && fetchedData.subcategories && fetchedData.subcategories.length > 0) {
      const subcategoriesArray = fetchedData.subcategories[0].split(',');
      setBrandData({ ...fetchedData, subcategories: subcategoriesArray });
    }
  }, []);

  useEffect(() => {
    // Fetch products from the API based on the selected category
    // Replace 'YOUR_API_URL' with the actual API endpoint to fetch products
    const fetchProducts = async () => {
      try {
        const response = await fetch(`http://192.168.8.153:3000/productlistcategory/${selectedSubcategory}`);
        const data = await response.json();
        setProducts(data);
      } catch (error) {
        console.error('Error fetching products:', error);
      }
    };

    // Call the fetchProducts function when the selectedSubcategory changes
    if (selectedSubcategory) {
      fetchProducts();
    }
  }, [selectedSubcategory]);

  const renderItem = ({ item }) => {
    return (
      <View>
        <Text>{item.productname}</Text>
        <Text>{item.price}</Text>
        {/* Add other product details here */}
      </View>
    );
  };

  return (
    <View>
      {brandData && (
        <View>
          <Image source={{ uri: brandData.brandimage }} style={{ width: 100, height: 100 }} />
          <Text>{brandData.brandname}</Text>
          <Text>{brandData.categories}</Text>
          <FlatList
            data={brandData.subcategories}
            renderItem={({ item }) => (
              <TouchableOpacity onPress={() => setSelectedSubcategory(item)}>
                <Text>{item}</Text>
              </TouchableOpacity>
            )}
            keyExtractor={(item) => item}
            horizontal
          />
        </View>
      )}

      <FlatList
        data={products}
        renderItem={renderItem}
        keyExtractor={(item) => item.productId}
      />
    </View>
  );
};

export default BrandView;